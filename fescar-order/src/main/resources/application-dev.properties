# 访问地址 :
# http://localhost:8080/bootapi/redis/testData

#--------------------------------------------------- Server setting start --------------------------------------------------
#springboot配置.
spring.application.name=fescar-account
server.port=9090
#server.context-path=/dubbo
#--------------------------------------------------- Server setting end ----------------------------------------------------

#----------------------------------------------------- mysql setting start -------------------------------------------------
spring.datasource.url=jdbc\:mysql\://127.0.0.1\:3306/test?useUnicode\=true&characterEncoding\=utf8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-active=200
spring.datasource.max-idle=100
spring.datasource.min-idle=100
spring.datasource.initial-size=20

#----------------------------------------------------- mysql setting  end ---------------------------------------------------

#----------------------------------------------------- mybatis setting start ------------------------------------------------
mybatis.mapper-locations=classpath:sqlmapper/*/*.xml
mybatis.check-config-location=true
mybatis.type-aliases-package=com.application.base.account.entity
#----------------------------------------------------- mybatis setting end --------------------------------------------------


#---------------------------------------------------- log--------------------------------------------------------------------
logging.config=classpath:logback.xml
logging.level.com.application.base.account = debug
logging.level.org.springframework.web=debug
logging.level.org.springframework.transaction=debug
logging.level.org.mybatis=debug

#---------------------------------------------------- log--------------------------------------------------------------------

#----------------------------------------------------- redis setting start -------------------------------------------------
spring.redis.host=127.0.0.1
spring.redis.password=02681330-d47f-4e34-a0fc-4a2f8931c523
spring.redis.port=16339
#----------------------------------------------------- redis setting  end ---------------------------------------------------

spring.http.encoding.force=true
# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

#配置dubbo的包扫描，针对dubbo的@Service, @Reference注解
dubbo.scan.basePackages=com.application.base.account.service

#dubbo配置
dubbo.application.id=fescar-account
dubbo.application.name=fescar-account
dubbo.application.owner=bruce

#切换网关端口,开关设置
dubbo.application.qos.port=100001
dubbo.application.qos.enable=true

#服务注册配置
dubbo.registry.id=nacos-application-registry
dubbo.registry.address=nacos://127.0.0.1:8848


#协议配置
dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
dubbo.protocol.status=server
#默认的20880端口
dubbo.protocol.port=20880
##序列化方式:基于Kryo和FST的Java高效序列化实现
dubbo.protocol.serialization=kryo
dubbo.service.loadbalance=roundrobin


#服务端版本
dubbo.provider.version=1.0.0
##超时时间
dubbo.provider.timeout=1200000

#管理端口.
management.server.port=9091
#dubbo健康监控
management.endpoints.dubbo.enabled=true

# Enables Dubbo All Endpoints
management.endpoint.dubbo.enabled = true
management.endpoint.dubbo-shutdown.enabled = true
management.endpoint.dubbo-configs.enabled = true
management.endpoint.dubbo-services.enabled = true
management.endpoint.dubbo-references.enabled = true
management.endpoint.dubbo-properties.enabled = true
# Dubbo Health
## StatusChecker Name defaults (default : "memory", "load" )
management.health.dubbo.status.defaults = memory
## StatusChecker Name extras (default : empty )
management.health.dubbo.status.extras = load,threadpool

##日志级别
#logging.level.com.application.base.dubbo.provider=debug
dubbo.application.logger=com.application.base.account.provider





############################################################################ 多数据源的配置 #######################################################################################################

spring.datasource.name=mutil-database
## MASTER setting ##
spring.datasource.master.url=jdbc\:mysql\://127.0.0.1\:3306/test1?useUnicode\=true&characterEncoding\=utf8
spring.datasource.master.username=root
spring.datasource.master.password=123456
spring.datasource.master.driver-class-name=com.mysql.jdbc.Driver
## SLAVE setting ##
spring.datasource.slave.url=jdbc\:mysql\://127.0.0.1\:3306/test1?useUnicode\=true&characterEncoding\=utf8
spring.datasource.slave.username=root
spring.datasource.slave.password=123456
spring.datasource.slave.driver-class-name=com.mysql.jdbc.Driver

## read and write setting ##
spring.datasource.read=get,select,count,list,query,find,
spring.datasource.write=add,create,update,delete,remove,insert,del,

## druid setting ##
##监控统计拦截的filters##
spring.datasource.druid.filters=stat,wall
##配置初始化大小/最小/最大##
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-active=100
##获取连接等待超时时间##
spring.datasource.druid.max-wait=60000
##间隔多久进行一次检测，检测需要关闭的空闲连接##
spring.datasource.druid.time-between-eviction-runs-millis=60000
##一个连接在池中最小生存的时间##
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 'x'
##test##
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
##打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false##
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20



############################################################################ PageHelper #######################################################################################################
#pagehelper
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true





